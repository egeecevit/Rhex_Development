<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:arg name="lidar_enabled" default="true"/>
    <!-- IMU (Internal Measurement Unit) -->
    <link name="imu_link">
        <xacro:box_inertia mass="0.001" width="0.01" height="0.01" length="0.01">
            <origin xyz="0 0 0" rpy="0 0 0" />
        </xacro:box_inertia>
    </link>

    <joint name="imu_joint" type="fixed">
        <parent link="base_link" />
        <child link="imu_link" />
    </joint>

    <gazebo reference="imu_link">
        <sensor name="imu_sensor" type="imu">
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <ros>
                    <namespace>/imu</namespace>
                    <remapping>~/out:=data</remapping>
                </ros>
                <initial_orientation_as_reference>false</initial_orientation_as_reference>
            </plugin>
            <always_on>true</always_on>
            <update_rate>1000</update_rate>
            <visualize>true</visualize>
            <imu>
                <angular_velocity>
                    <x>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                            <bias_mean>0.0000075</bias_mean>
                            <bias_stddev>0.0000008</bias_stddev>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                            <bias_mean>0.0000075</bias_mean>
                            <bias_stddev>0.0000008</bias_stddev>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                            <bias_mean>0.0000075</bias_mean>
                            <bias_stddev>0.0000008</bias_stddev>
                        </noise>
                    </z>
                </angular_velocity>
                <linear_acceleration>
                    <x>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>1.7e-2</stddev>
                            <bias_mean>0.1</bias_mean>
                            <bias_stddev>0.001</bias_stddev>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>1.7e-2</stddev>
                            <bias_mean>0.1</bias_mean>
                            <bias_stddev>0.001</bias_stddev>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>1.7e-2</stddev>
                            <bias_mean>0.1</bias_mean>
                            <bias_stddev>0.001</bias_stddev>
                        </noise>
                    </z>
                </linear_acceleration>
            </imu>
        </sensor>
    </gazebo>

    <!-- Lidar -->
    <link name="lidar_frame">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.04" length="0.05"/>
            </geometry>
        </visual>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.04" length="0.05"/>
            </geometry>
        </collision>

        <xacro:cylinder_inertia mass="0.005" radius="0.04" length="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:cylinder_inertia>
    </link>

    <joint name="lidar_base_joint" type="fixed">
        <parent link="base_link"/>
        <child link="lidar_frame"/>
        <origin xyz="0 0 ${base_height/2 + 0.025}" rpy="0 0 0"/>
    </joint>
    <xacro:if value="$(arg lidar_enabled)">
        <gazebo reference="lidar_frame">
            <material>Gazebo/Gray</material>

            <sensor name="lidar" type="ray">
                <always_on>true</always_on>
                <visualize>true</visualize>
                <update_rate>5.0</update_rate>
                <ray>
                    <scan>
                        <horizontal>
                            <samples>360</samples>
                            <resolution>1.00000</resolution>
                            <min_angle>${-pi}</min_angle>
                            <max_angle>${pi}</max_angle>
                        </horizontal>
                    </scan>
                    <range>
                        <min>0.120000</min>
                        <max>10.00000</max>
                    </range>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.01</stddev>
                    </noise>
                </ray>
                <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
                    <ros>
                        <argument>~/out:=scan</argument>
                    </ros>
                    <output_type>sensor_msgs/LaserScan</output_type>
                    <frame_name>lidar_frame</frame_name>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:if>

    <!-- RGBD Camera -->
    <link name="camera_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.015 0.13 0.022"/>
            </geometry>
        </visual>
    
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.015 0.13 0.022"/>
            </geometry>
        </collision>
    
        <xacro:box_inertia mass="0.02" width="0.015" height="0.022" length="0.13">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:box_inertia>
    </link>
    
    <joint name="camera_joint" type="fixed">
        <parent link="base_link"/>
        <child link="camera_link"/>
        <origin xyz="${base_length/2} 0 0" rpy="0 0 0"/>
    </joint>
    
    <link name="camera_depth_frame"/>
    
    <joint name="camera_depth_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
        <parent link="camera_link"/>
        <child link="camera_depth_frame"/>
    </joint>
    
    <gazebo reference="camera_link">
        <sensor name="depth_camera" type="depth">
            <visualize>true</visualize>
            <update_rate>30.0</update_rate>
            <camera name="camera">
                <horizontal_fov>1.047198</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>B8G8R8</format>
                </image>
                <clip>
                    <near>0.05</near>
                    <far>30</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.  
                         That pixel's noise value is added to each of its color
                         channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
                <update_rate>0.0</update_rate>
                <frame_name>camera_depth_frame</frame_name>
                <min_depth>0.2</min_depth>
                <max_depth>4.0</max_depth>
            </plugin>
        </sensor>
    </gazebo>

</robot>
